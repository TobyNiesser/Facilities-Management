// <auto-generated />
using System;
using FACILITIES.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FACILITIES.Migrations
{
    [DbContext(typeof(FACILITIESContext))]
    [Migration("20191128153547_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FACILITIES.Models.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addr1");

                    b.Property<string>("Addr2");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("Name");

                    b.Property<int?>("OfficeID");

                    b.Property<string>("Postcode");

                    b.Property<string>("Telephone");

                    b.Property<string>("Town");

                    b.Property<string>("VatNumber");

                    b.HasKey("CompanyID");

                    b.HasIndex("OfficeID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("FACILITIES.Models.File", b =>
                {
                    b.Property<int>("FileID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Extension");

                    b.Property<string>("FileName");

                    b.Property<string>("FileSize");

                    b.Property<string>("MimeType");

                    b.Property<string>("StoreLocation");

                    b.HasKey("FileID");

                    b.ToTable("File");
                });

            modelBuilder.Entity("FACILITIES.Models.Frequency", b =>
                {
                    b.Property<int>("FrequencyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FrequencyAmount");

                    b.HasKey("FrequencyID");

                    b.ToTable("Frequency");
                });

            modelBuilder.Entity("FACILITIES.Models.Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ItemName");

                    b.HasKey("ItemID");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("FACILITIES.Models.ItemConfig", b =>
                {
                    b.Property<int>("ItemConfigID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemID");

                    b.Property<string>("Items_csv");

                    b.Property<int?>("OfficeID");

                    b.HasKey("ItemConfigID");

                    b.HasIndex("ItemID");

                    b.HasIndex("OfficeID");

                    b.ToTable("ItemConfig");
                });

            modelBuilder.Entity("FACILITIES.Models.Manager", b =>
                {
                    b.Property<int>("ManagerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyID");

                    b.Property<int?>("OfficeID");

                    b.Property<int?>("PermissionID");

                    b.Property<string>("UserEmail");

                    b.Property<string>("UserName");

                    b.HasKey("ManagerID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("OfficeID");

                    b.HasIndex("PermissionID");

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("FACILITIES.Models.Office", b =>
                {
                    b.Property<int>("OfficeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addr1");

                    b.Property<string>("Addr2");

                    b.Property<string>("City");

                    b.Property<int?>("CompanyID");

                    b.Property<string>("Country");

                    b.Property<int?>("ItemID");

                    b.Property<string>("LandlordEmail");

                    b.Property<string>("LandlordName");

                    b.Property<int>("LandlordTelephone");

                    b.Property<int?>("ManagerID");

                    b.Property<string>("Name");

                    b.Property<string>("Postcode");

                    b.Property<string>("Telephone");

                    b.Property<string>("Town");

                    b.HasKey("OfficeID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("ItemID");

                    b.HasIndex("ManagerID");

                    b.ToTable("Office");
                });

            modelBuilder.Entity("FACILITIES.Models.Permission", b =>
                {
                    b.Property<int>("PermissionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountType");

                    b.Property<string>("Name");

                    b.HasKey("PermissionID");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("FACILITIES.Models.Responsibility", b =>
                {
                    b.Property<int>("ResponsibilityID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ResponsibilityID");

                    b.ToTable("Responsibility");
                });

            modelBuilder.Entity("FACILITIES.Models.Setting", b =>
                {
                    b.Property<int>("SettingID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<int?>("CompanyID");

                    b.Property<DateTime>("DueDate");

                    b.Property<int?>("FrequencyID");

                    b.Property<int?>("ItemID");

                    b.Property<DateTime>("NextDate");

                    b.Property<int?>("OfficeID");

                    b.Property<int?>("ResponsibilityID");

                    b.Property<int?>("StatusID");

                    b.HasKey("SettingID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("FrequencyID");

                    b.HasIndex("ItemID");

                    b.HasIndex("OfficeID");

                    b.HasIndex("ResponsibilityID");

                    b.HasIndex("StatusID");

                    b.ToTable("Setting");
                });

            modelBuilder.Entity("FACILITIES.Models.Status", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusIndicator");

                    b.HasKey("StatusID");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("FACILITIES.Models.Company", b =>
                {
                    b.HasOne("FACILITIES.Models.Office", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeID");
                });

            modelBuilder.Entity("FACILITIES.Models.ItemConfig", b =>
                {
                    b.HasOne("FACILITIES.Models.Item", "Item")
                        .WithMany("ItemConfigs")
                        .HasForeignKey("ItemID");

                    b.HasOne("FACILITIES.Models.Office", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeID");
                });

            modelBuilder.Entity("FACILITIES.Models.Manager", b =>
                {
                    b.HasOne("FACILITIES.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID");

                    b.HasOne("FACILITIES.Models.Office")
                        .WithMany("Managers")
                        .HasForeignKey("OfficeID");

                    b.HasOne("FACILITIES.Models.Permission", "Permission")
                        .WithMany("Managers")
                        .HasForeignKey("PermissionID");
                });

            modelBuilder.Entity("FACILITIES.Models.Office", b =>
                {
                    b.HasOne("FACILITIES.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID");

                    b.HasOne("FACILITIES.Models.Item", "Item")
                        .WithMany("Offices")
                        .HasForeignKey("ItemID");

                    b.HasOne("FACILITIES.Models.Manager", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerID");
                });

            modelBuilder.Entity("FACILITIES.Models.Setting", b =>
                {
                    b.HasOne("FACILITIES.Models.Company", "Company")
                        .WithMany("Settings")
                        .HasForeignKey("CompanyID");

                    b.HasOne("FACILITIES.Models.Frequency", "Frequency")
                        .WithMany("Settings")
                        .HasForeignKey("FrequencyID");

                    b.HasOne("FACILITIES.Models.Item", "Item")
                        .WithMany("Settings")
                        .HasForeignKey("ItemID");

                    b.HasOne("FACILITIES.Models.Office", "Office")
                        .WithMany("Settings")
                        .HasForeignKey("OfficeID");

                    b.HasOne("FACILITIES.Models.Responsibility", "Responsibility")
                        .WithMany("Settings")
                        .HasForeignKey("ResponsibilityID");

                    b.HasOne("FACILITIES.Models.Status", "Status")
                        .WithMany("Settings")
                        .HasForeignKey("StatusID");
                });
#pragma warning restore 612, 618
        }
    }
}
